<?php
/**
 * @link http://www.yiiframework.com/
 * @copyright Copyright (c) 2008 Yii Software LLC
 * @license http://www.yiiframework.com/license/
 */

namespace app\core\widgets;

use Yii;
use yii\base\InvalidConfigException;
use yii\helpers\Url;
use yii\helpers\Html;
use yii\helpers\Json;
use yii\widgets\InputWidget;

/**
 * Captcha renders a CAPTCHA image and an input field that takes user-entered verification code.
 *
 * Captcha is used together with [[CaptchaAction]] provide [CAPTCHA](http://en.wikipedia.org/wiki/Captcha) - a way
 * of preventing Website spamming.
 *
 * The image element rendered by Captcha will display a CAPTCHA image generated by
 * an action whose route is specified by [[captchaAction]]. This action must be an instance of [[CaptchaAction]].
 *
 * When the user clicks on the CAPTCHA image, it will cause the CAPTCHA image
 * to be refreshed with a new CAPTCHA.
 *
 * You may use [[\yii\captcha\CaptchaValidator]] to validate the user input matches
 * the current CAPTCHA verification code.
 *
 * The following example shows how to use this widget with a model attribute:
 *
 * ```php
 * echo Captcha::widget([
 *     'model' => $model,
 *     'attribute' => 'captcha',
 * ]);
 * ```
 *
 * The following example will use the name property instead:
 *
 * ```php
 * echo Captcha::widget([
 *     'name' => 'captcha',
 * ]);
 * ```
 *
 * You can also use this widget in an [[yii\widgets\ActiveForm|ActiveForm]] using the [[yii\widgets\ActiveField::widget()|widget()]]
 * method, for example like this:
 *
 * ```php
 * <?= $form->field($model, 'captcha')->widget(\yii\captcha\Captcha::classname(), [
 *     // configure additional widget properties here
 * ]) ?>
 * ```
 *
 * @author Qiang Xue <qiang.xue@gmail.com>
 * @since 2.0
 */
class VerifySms extends InputWidget
{
    public $smsAction = 'site/captcha';
    public $template = '{input} {button}';
    /**
     * @var array the HTML attributes for the input tag.
     * @see \yii\helpers\Html::renderTagAttributes() for details on how attributes are being rendered.
     */
    public $options = ['class' => 'form-control'];
    public $buttonOptions = [
        'class'=>'btn btn-primary'
    ];


    /**
     * Initializes the widget.
     */
    public function init()
    {
        parent::init();

        if (!isset($this->buttonOptions['id'])) {
            $this->buttonOptions['id'] = $this->options['id'] . '-button';
        }
    }

    /**
     * Renders the widget.
     */
    public function run()
    {
        $this->registerClientScript();

        if ($this->hasModel()) {
            $input = Html::activeTextInput($this->model, $this->attribute, $this->options);
        } else {
            $input = Html::textInput($this->name, $this->value, $this->options);
        }
        $route = $this->smsAction;
        if (is_array($route)) {
            $route['v'] = uniqid();
        } else {
            $route = [$route, 'v' => uniqid()];
        }
        $button = Html::button('获取验证码', $this->buttonOptions);
        echo strtr($this->template, [
            '{input}' => $input,
            '{button}' => $button,
        ]);
    }

    /**
     * Registers the needed JavaScript.
     */
    public function registerClientScript()
    {
//        $options = $this->getClientOptions();
//        $options = empty($options) ? '' : Json::htmlEncode($options);
        $id = $this->buttonOptions['id'];
        $view = $this->getView();
        $url = Url::to(['sign/captcha-code']);
        $view->registerJs("
            var verifyFlag = true;

            var timer;
            var time = initTime =  5;
            function vStart(){
               jQuery('#$id').attr('disabled','disabled').html('<span id=\"verifyTime\">'+time+'</span>秒后重新获取');
               timer = window.setTimeout(function(){
                    if(!time){
                        window.clearTimeout(timer);
                        jQuery('#$id').attr('disabled',false).html('点击获取验证码');
                        time = initTime;
                        verifyFlag = true;
                    }else{
                        time--;
                        $('#verifyTime').html(time);
                        vStart();
                    }
               },1000);
            }

            jQuery('#$id').click(function(){
                var mobile = $('#apiuser-phone').val();
                var code = $('#apiuser-verifycode').val();

                if(mobile == ''){
                    alert('请输入手机号');
                    return false;
                }
                if(verifyFlag){
                    jQuery(this).html();

                    verifyFlag = false;
                    $.ajax({
		               type: 'get',
		                url: '$url',
		                data:{
		                    mobile:mobile,
		                    code:code
		                },
                        beforeSend:function(){
                        },
		                success: function(data, textStatus){
                            vStart();

		                }
                    });
                }
            });");
    }

    /**
     * Returns the options for the captcha JS widget.
     * @return array the options
     */
    protected function getClientOptions()
    {
        $route = $this->captchaAction;
        if (is_array($route)) {
            $route[CaptchaAction::REFRESH_GET_VAR] = 1;
        } else {
            $route = [$route, CaptchaAction::REFRESH_GET_VAR => 1];
        }

        $options = [
            'refreshUrl' => Url::toRoute($route),
            'hashKey' => "yiiCaptcha/{$route[0]}",
        ];

        return $options;
    }


}
